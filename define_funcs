#!/bin/bash
# define_funcs

# remember to source this BEFORE you try to export the stuff

function up {
	rungnum=1 # how many ladder-rungs to climb, default just 1 level if no args
	if (( $# > 0 )); then
		rungnum=$1 	
	fi
	gohere=""
	for ((i=0;i<${rungnum};i+=1)); do
		gohere="${gohere}../"
	done
	# alias up='cd `pwd -P`/..' #resolve symlinks and go up. 'cd -' is for going "back"
	cd "`pwd -P`/$gohere"
}

function grepr {
	location='.'
	regex=""
	findargs=""
	if (( $# < 1 )); then
		echo 'Recursive grep usage: grepr [<location>] <regex> [<extra args for find>]]'
		exit 1
	elif [[ $# -eq 1 ]]; then
		regex="$1"
	else # (( $# > 1 )); then
		location="$1"
		regex="$2"
		shift 2
		while [[ $# -gt 0 ]]; do
			findargs="$findargs $1"
			shift
		done
	fi
	shift $shiftamount # perform shift so $@ works next
	echo find "$location" -type f $findargs -exec grep -H "$regex" {} \; 
	find "$location" -type f $findargs -exec grep -H "$regex" {} \; 
}

function unlock {
	if (( $# < 1 )); then
		echo 'No arguments received. Usage: unlock <file>'
	else
		for arg in "$@"; do
		# ^ loop through arguments as needed
			rm "."$arg".swp"
		done
	fi
}

function cdl {
    cd "$(dirname "$(readlink "$1")")"
}

function lcd {
	cdl "$@"
}

function sis {
    cd ../$1
}

function tarup {
	if (( $# > 1 )); then
		tar cvzf $*
	else
		tar cvzf "$1".tar "$1"
		# ^ this prevents that obnoxious and confounding
		# ^.. "cowardly refusing to create an empty archive" message
	fi
}

