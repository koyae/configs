

snippet dependencies "Dependencies/include/import section" b
---- dependencies:

-- -- for $1:
-- \i '$2'

---- :dependencies
endsnippet


snippet dependency "Dependency import/include for top section" b
-- -- for $1
-- \i $2

endsnippet

snippet disabletrigger "Disable one or a class of triggers" b
ALTER TABLE ${1:tableName} DISABLE TRIGGER ${2:USER};
endsnippet


snippet doplpg "Imperative plpgsql block" b
DO LANGUAGE plpgsql $$
`!v PlpgBody()`
$$;
endsnippet


snippet dropfunction "Drop a function" b
DROP FUNCTION IF EXISTS ${1:functionName} ${2:CASCADE}; -- X
endsnippet


snippet commentfunction "Comment on a function" b
COMMENT ON FUNCTION ${1:functionName} IS $$
$0
$$;
endsnippet


snippet createplpg "Definition for plpgsql function" b
CREATE OR REPLACE FUNCTION ${1:functionName}() RETURNS ${2:returnType} AS
$$
`!v PlpgBody()`
$$ LANGUAGE plpgsql $0;
endsnippet


snippet createsql "Defininition for sql function" b
CREATE OR REPLACE FUNCTION ${1:functionName}() RETURNS ${2:returnType} AS
$$
	$3
$$ LANGUAGE sql $0;
endsnippet


snippet enabletrigger "Enable one or a class of triggers" b
ALTER TABLE ${1:tableName} ENABLE TRIGGER ${2:USER};$0
endsnippet

snippet sell "Select with limit - grab a single row from a table"
SELECT ${2:*} FROM ${1:tableName} LIMIT 1;$0
endsnippet

snippet sel "Select"
SELECT ${1:*} FROM ${2:tableName};$0
endsnippet

snippet sel "Select distinct"
SELECT DISTINCT ${1:*} FROM ${2:tableName};$0
endsnippet

snippet renamecol "Rename a table-column." b
ALTER TABLE ${1:tableName} RENAME COLUMN ${2:columnName} TO ${3:newColumnName};$0
endsnippet

snippet renametab "Rename a table." b
ALTER TABLE ${1:tableName} RENAME TO ${2:newTableName};$0
endsnippet

snippet dropcol "Drop a column from an existing table" b
ALTER TABLE ${1:tableName} DROP COLUMN ${2:columnName};$0
endsnippet

snippet update "Update rows in a table the safe way" b
UPDATE ${1:tableName} SET ${2:columnName}=${3:expression} WHERE ${4:condition};$0
endsnippet
